import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from '@/components/ui/sheet';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Textarea } from '@/components/ui/textarea';
import { Separator } from '@/components/ui/separator';
import Icon from '@/components/ui/icon';

interface Product {
  id: number;
  name: string;
  price: number;
  category: string;
  image: string;
  description: string;
  isHalal: boolean;
}

interface CartItem extends Product {
  quantity: number;
}

interface Order {
  id: number;
  date: string;
  items: CartItem[];
  total: number;
  status: string;
  deliveryType: string;
}

const Index = () => {
  const [cart, setCart] = useState<CartItem[]>([]);
  const [user, setUser] = useState({ name: '–ê—Ö–º–µ–¥ –ò–≤–∞–Ω–æ–≤', email: 'ahmed@example.com' });
  const [orders, setOrders] = useState<Order[]>([
    {
      id: 1,
      date: '2024-09-05',
      items: [],
      total: 2450,
      status: '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
      deliveryType: '–î–æ—Å—Ç–∞–≤–∫–∞'
    },
    {
      id: 2,
      date: '2024-09-01',
      items: [],
      total: 1890,
      status: '–í –ø—É—Ç–∏',
      deliveryType: '–°–∞–º–æ–≤—ã–≤–æ–∑'
    }
  ]);

  const products: Product[] = [
    {
      id: 1,
      name: '–ì–æ–≤—è–¥–∏–Ω–∞ —Ö–∞–ª—è–ª—å –æ—Ç–±–æ—Ä–Ω–∞—è',
      price: 890,
      category: 'meat',
      image: '/img/52be4405-78cf-4286-b5ef-bba710c5d16f.jpg',
      description: '–°–≤–µ–∂–∞—è –≥–æ–≤—è–¥–∏–Ω–∞ –≤—ã—Å—à–µ–≥–æ —Å–æ—Ä—Ç–∞ —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–º —Ö–∞–ª—è–ª—å',
      isHalal: true
    },
    {
      id: 2,
      name: '–ö—É—Ä–∏—Ü–∞ —Ö–∞–ª—è–ª—å',
      price: 320,
      category: 'meat',
      image: '/img/52be4405-78cf-4286-b5ef-bba710c5d16f.jpg',
      description: '–û—Ö–ª–∞–∂–¥–µ–Ω–Ω–∞—è –∫—É—Ä–∏—Ü–∞, —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ö–∞–ª—è–ª—å',
      isHalal: true
    },
    {
      id: 3,
      name: '–ö–æ–ª–±–∞—Å–∞ —Ö–∞–ª—è–ª—å –¥–æ–º–∞—à–Ω—è—è',
      price: 450,
      category: 'meat',
      image: '/img/52be4405-78cf-4286-b5ef-bba710c5d16f.jpg',
      description: '–î–æ–º–∞—à–Ω—è—è –∫–æ–ª–±–∞—Å–∞ –∏–∑ –≥–æ–≤—è–¥–∏–Ω—ã –∏ –±–∞—Ä–∞–Ω–∏–Ω—ã',
      isHalal: true
    },
    {
      id: 4,
      name: '–ë–µ–ª—è—à–∏ —Å –º—è—Å–æ–º',
      price: 85,
      category: 'bakery',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–ì–æ—Ä—è—á–∏–µ –±–µ–ª—è—à–∏ —Å —Å–æ—á–Ω–æ–π –º—è—Å–Ω–æ–π –Ω–∞—á–∏–Ω–∫–æ–π',
      isHalal: true
    },
    {
      id: 5,
      name: '–°–∞–º—Å–∞ —É–∑–±–µ–∫—Å–∫–∞—è',
      price: 95,
      category: 'bakery',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∞–º—Å–∞ —Å –±–∞—Ä–∞–Ω–∏–Ω–æ–π –∏ –ª—É–∫–æ–º',
      isHalal: true
    },
    {
      id: 6,
      name: '–ü–ª–æ–≤ —É–∑–±–µ–∫—Å–∫–∏–π',
      price: 280,
      category: 'ready',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–ù–∞—Å—Ç–æ—è—â–∏–π —É–∑–±–µ–∫—Å–∫–∏–π –ø–ª–æ–≤ —Å –º—è—Å–æ–º –∏ –º–æ—Ä–∫–æ–≤—å—é',
      isHalal: true
    },
    {
      id: 7,
      name: '–ú–∞–Ω—Ç—ã —Å –±–∞—Ä–∞–Ω–∏–Ω–æ–π',
      price: 320,
      category: 'ready',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–ü–∞—Ä–æ–≤—ã–µ –º–∞–Ω—Ç—ã —Å —Å–æ—á–Ω–æ–π –Ω–∞—á–∏–Ω–∫–æ–π –∏–∑ –±–∞—Ä–∞–Ω–∏–Ω—ã',
      isHalal: true
    },
    {
      id: 8,
      name: '–®—É—Ä–ø–∞ –¥–æ–º–∞—à–Ω—è—è',
      price: 220,
      category: 'ready',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–ê—Ä–æ–º–∞—Ç–Ω–∞—è —à—É—Ä–ø–∞ —Å –º—è—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏',
      isHalal: true
    },
    {
      id: 9,
      name: '–ß–∞–π –∑–µ–ª–µ–Ω—ã–π —É–∑–±–µ–∫—Å–∫–∏–π',
      price: 180,
      category: 'drinks',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–µ–ª–µ–Ω—ã–π —á–∞–π –∏–∑ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞',
      isHalal: true
    },
    {
      id: 10,
      name: '–†–∏—Å –±–∞—Å–º–∞—Ç–∏ –æ—Ç–±–æ—Ä–Ω—ã–π',
      price: 240,
      category: 'grains',
      image: '/img/6ac4ec7a-f36b-49a6-9831-fd815337f0f8.jpg',
      description: '–î–ª–∏–Ω–Ω–æ–∑–µ—Ä–Ω—ã–π —Ä–∏—Å –±–∞—Å–º–∞—Ç–∏ –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞',
      isHalal: true
    }
  ];

  const categories = [
    { id: 'all', name: '–í—Å–µ —Ç–æ–≤–∞—Ä—ã', icon: 'Store' },
    { id: 'meat', name: '–ú—è—Å–æ', icon: 'Beef' },
    { id: 'bakery', name: '–í—ã–ø–µ—á–∫–∞', icon: 'Cookie' },
    { id: 'ready', name: '–ì–æ—Ç–æ–≤—ã–µ –±–ª—é–¥–∞', icon: 'ChefHat' },
    { id: 'drinks', name: '–ù–∞–ø–∏—Ç–∫–∏', icon: 'Coffee' },
    { id: 'grains', name: '–ö—Ä—É–ø—ã', icon: 'Wheat' }
  ];

  const [selectedCategory, setSelectedCategory] = useState('all');
  const [orderForm, setOrderForm] = useState({
    name: '',
    phone: '',
    address: '',
    deliveryType: 'delivery',
    notes: ''
  });

  const filteredProducts = selectedCategory === 'all' 
    ? products 
    : products.filter(product => product.category === selectedCategory);

  const addToCart = (product: Product) => {
    setCart(prev => {
      const existing = prev.find(item => item.id === product.id);
      if (existing) {
        return prev.map(item =>
          item.id === product.id
            ? { ...item, quantity: item.quantity + 1 }
            : item
        );
      }
      return [...prev, { ...product, quantity: 1 }];
    });
  };

  const removeFromCart = (productId: number) => {
    setCart(prev => prev.filter(item => item.id !== productId));
  };

  const updateQuantity = (productId: number, quantity: number) => {
    if (quantity <= 0) {
      removeFromCart(productId);
      return;
    }
    setCart(prev =>
      prev.map(item =>
        item.id === productId ? { ...item, quantity } : item
      )
    );
  };

  const getTotalPrice = () => {
    return cart.reduce((total, item) => total + item.price * item.quantity, 0);
  };

  const handleOrder = () => {
    if (cart.length === 0) return;
    
    const newOrder: Order = {
      id: orders.length + 1,
      date: new Date().toISOString().split('T')[0],
      items: [...cart],
      total: getTotalPrice(),
      status: '–û–±—Ä–∞–±–æ—Ç–∫–∞',
      deliveryType: orderForm.deliveryType === 'delivery' ? '–î–æ—Å—Ç–∞–≤–∫–∞' : '–°–∞–º–æ–≤—ã–≤–æ–∑'
    };
    
    setOrders(prev => [newOrder, ...prev]);
    setCart([]);
    setOrderForm({ name: '', phone: '', address: '', deliveryType: 'delivery', notes: '' });
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-desert-sand/20 to-sunset-orange/30" style={{ backgroundImage: `linear-gradient(45deg, rgba(252, 211, 77, 0.1) 0%, rgba(249, 115, 22, 0.2) 100%), url('https://cdn.poehali.dev/files/0d60cf81-1253-44bc-90d1-7715c12cfd4e.jpeg')`, backgroundSize: 'cover', backgroundBlendMode: 'multiply' }}>
      {/* Header */}
      <header className="bg-gradient-to-r from-islamic-gold/95 to-golden-amber/95 backdrop-blur-md border-b border-warm-terracotta/30 sticky top-0 z-50" style={{ backgroundImage: `url('https://cdn.poehali.dev/files/ad07a1e9-24a3-4d83-acc2-69831d9f77f5.jpeg')`, backgroundSize: 'cover', backgroundBlendMode: 'overlay' }}>
        <div className="container mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center space-x-3">
              <div className="text-2xl">üïå</div>
              <div>
                <h1 className="text-2xl font-bold text-warm-terracotta font-heading drop-shadow-md">–•–∞–ª—è–ª—å –ú–∞—Ä–∫–µ—Ç</h1>
                <p className="text-sm text-warm-terracotta/80 font-body drop-shadow-sm">–í–æ—Å—Ç–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-4">
              <Sheet>
                <SheetTrigger asChild>
                  <Button variant="outline" size="sm" className="relative">
                    <Icon name="ShoppingCart" size={20} />
                    {cart.length > 0 && (
                      <Badge className="absolute -top-2 -right-2 h-5 w-5 flex items-center justify-center text-xs">
                        {cart.reduce((sum, item) => sum + item.quantity, 0)}
                      </Badge>
                    )}
                  </Button>
                </SheetTrigger>
                <SheetContent>
                  <SheetHeader>
                    <SheetTitle className="font-heading">–ö–æ—Ä–∑–∏–Ω–∞</SheetTitle>
                  </SheetHeader>
                  <div className="mt-6 space-y-4">
                    {cart.length === 0 ? (
                      <p className="text-center text-muted-foreground py-8 font-body">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</p>
                    ) : (
                      <>
                        {cart.map(item => (
                          <div key={item.id} className="flex items-center justify-between p-3 border rounded-lg">
                            <div className="flex-1">
                              <h4 className="font-medium font-body">{item.name}</h4>
                              <p className="text-sm text-muted-foreground">{item.price} ‚ÇΩ</p>
                            </div>
                            <div className="flex items-center space-x-2">
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => updateQuantity(item.id, item.quantity - 1)}
                              >
                                -
                              </Button>
                              <span className="w-8 text-center">{item.quantity}</span>
                              <Button
                                size="sm"
                                variant="outline"
                                onClick={() => updateQuantity(item.id, item.quantity + 1)}
                              >
                                +
                              </Button>
                            </div>
                          </div>
                        ))}
                        <Separator />
                        <div className="flex justify-between font-semibold font-body">
                          <span>–ò—Ç–æ–≥–æ:</span>
                          <span>{getTotalPrice()} ‚ÇΩ</span>
                        </div>
                        <div className="space-y-4">
                          <div className="grid w-full max-w-sm items-center gap-1.5">
                            <Label htmlFor="name" className="font-body">–ò–º—è</Label>
                            <Input
                              id="name"
                              value={orderForm.name}
                              onChange={(e) => setOrderForm(prev => ({ ...prev, name: e.target.value }))}
                            />
                          </div>
                          <div className="grid w-full max-w-sm items-center gap-1.5">
                            <Label htmlFor="phone" className="font-body">–¢–µ–ª–µ—Ñ–æ–Ω</Label>
                            <Input
                              id="phone"
                              value={orderForm.phone}
                              onChange={(e) => setOrderForm(prev => ({ ...prev, phone: e.target.value }))}
                            />
                          </div>
                          <div className="grid w-full max-w-sm items-center gap-1.5">
                            <Label className="font-body">–°–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è</Label>
                            <Select value={orderForm.deliveryType} onValueChange={(value) => setOrderForm(prev => ({ ...prev, deliveryType: value }))}>
                              <SelectTrigger>
                                <SelectValue />
                              </SelectTrigger>
                              <SelectContent>
                                <SelectItem value="delivery">–î–æ—Å—Ç–∞–≤–∫–∞</SelectItem>
                                <SelectItem value="pickup">–°–∞–º–æ–≤—ã–≤–æ–∑</SelectItem>
                              </SelectContent>
                            </Select>
                          </div>
                          {orderForm.deliveryType === 'delivery' && (
                            <div className="grid w-full max-w-sm items-center gap-1.5">
                              <Label htmlFor="address" className="font-body">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</Label>
                              <Textarea
                                id="address"
                                value={orderForm.address}
                                onChange={(e) => setOrderForm(prev => ({ ...prev, address: e.target.value }))}
                              />
                            </div>
                          )}
                          <Button className="w-full" onClick={handleOrder}>
                            –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                          </Button>
                        </div>
                      </>
                    )}
                  </div>
                </SheetContent>
              </Sheet>
              
              <Sheet>
                <SheetTrigger asChild>
                  <Button variant="outline" size="sm">
                    <Icon name="User" size={20} />
                    <span className="font-body">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</span>
                  </Button>
                </SheetTrigger>
                <SheetContent>
                  <SheetHeader>
                    <SheetTitle className="font-heading">–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</SheetTitle>
                  </SheetHeader>
                  <Tabs defaultValue="profile" className="mt-6">
                    <TabsList className="grid w-full grid-cols-2">
                      <TabsTrigger value="profile" className="font-body">–ü—Ä–æ—Ñ–∏–ª—å</TabsTrigger>
                      <TabsTrigger value="orders" className="font-body">–ó–∞–∫–∞–∑—ã</TabsTrigger>
                    </TabsList>
                    <TabsContent value="profile" className="space-y-4">
                      <div className="space-y-4">
                        <div>
                          <Label className="font-body">–ò–º—è</Label>
                          <Input value={user.name} onChange={(e) => setUser(prev => ({ ...prev, name: e.target.value }))} />
                        </div>
                        <div>
                          <Label className="font-body">Email</Label>
                          <Input value={user.email} onChange={(e) => setUser(prev => ({ ...prev, email: e.target.value }))} />
                        </div>
                        <Button>–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è</Button>
                      </div>
                    </TabsContent>
                    <TabsContent value="orders" className="space-y-4">
                      {orders.map(order => (
                        <Card key={order.id}>
                          <CardHeader className="pb-2">
                            <div className="flex justify-between items-center">
                              <CardTitle className="text-sm font-heading">–ó–∞–∫–∞–∑ #{order.id}</CardTitle>
                              <Badge variant={order.status === '–î–æ—Å—Ç–∞–≤–ª–µ–Ω' ? 'default' : 'secondary'}>
                                {order.status}
                              </Badge>
                            </div>
                            <CardDescription className="font-body">{order.date} ‚Ä¢ {order.deliveryType}</CardDescription>
                          </CardHeader>
                          <CardFooter>
                            <div className="text-right">
                              <p className="font-semibold font-body">{order.total} ‚ÇΩ</p>
                            </div>
                          </CardFooter>
                        </Card>
                      ))}
                    </TabsContent>
                  </Tabs>
                </SheetContent>
              </Sheet>
            </div>
          </div>
        </div>
      </header>

      <main className="container mx-auto px-4 py-8">
        {/* Hero Section */}
        <section className="text-center mb-12 py-12 bg-gradient-to-r from-islamic-gold/20 to-golden-amber/30 rounded-2xl border border-desert-sand/50 backdrop-blur-sm">
          <div className="max-w-2xl mx-auto">
            <h2 className="text-4xl font-bold text-warm-terracotta mb-4 font-heading drop-shadow-lg">
              üåô –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –•–∞–ª—è–ª—å –ú–∞—Ä–∫–µ—Ç
            </h2>
            <p className="text-lg text-muted-foreground mb-6 font-body">
              –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ö–∞–ª—è–ª—å–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –≤–æ—Å—Ç–æ—á–Ω—ã–µ –¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã —Å –¥–æ—Å—Ç–∞–≤–∫–æ–π –Ω–∞ –¥–æ–º
            </p>
            <div className="flex justify-center space-x-8 text-sm text-muted-foreground font-body">
              <div className="flex items-center space-x-2">
                <Icon name="ShieldCheck" size={16} />
                <span>100% –•–∞–ª—è–ª—å</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Clock" size={16} />
                <span>–ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞</span>
              </div>
              <div className="flex items-center space-x-2">
                <Icon name="Star" size={16} />
                <span>–í—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ</span>
              </div>
            </div>
          </div>
        </section>

        {/* Categories */}
        <section className="mb-8">
          <div className="flex flex-wrap justify-center gap-4">
            {categories.map(category => (
              <Button
                key={category.id}
                variant={selectedCategory === category.id ? "default" : "outline"}
                onClick={() => setSelectedCategory(category.id)}
                className="flex items-center space-x-2"
              >
                <Icon name={category.icon as any} size={16} />
                <span className="font-body">{category.name}</span>
              </Button>
            ))}
          </div>
        </section>

        {/* Products Grid */}
        <section className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {filteredProducts.map(product => (
            <Card key={product.id} className="overflow-hidden hover:shadow-lg transition-shadow animate-fade-in">
              <div className="aspect-square overflow-hidden">
                <img
                  src={product.image}
                  alt={product.name}
                  className="w-full h-full object-cover hover:scale-105 transition-transform"
                />
              </div>
              <CardHeader className="pb-2">
                <div className="flex justify-between items-start">
                  <CardTitle className="text-lg font-heading">{product.name}</CardTitle>
                  {product.isHalal && (
                    <Badge variant="secondary" className="bg-mosque-green/20 text-mosque-green border border-mosque-green/30">
                      ‚úì –•–∞–ª—è–ª—å
                    </Badge>
                  )}
                </div>
                <CardDescription className="text-sm font-body">{product.description}</CardDescription>
              </CardHeader>
              <CardFooter className="flex justify-between items-center">
                <span className="text-xl font-bold text-primary font-body">{product.price} ‚ÇΩ</span>
                <Button onClick={() => addToCart(product)} size="sm">
                  <Icon name="Plus" size={16} />
                  <span className="font-body">–í –∫–æ—Ä–∑–∏–Ω—É</span>
                </Button>
              </CardFooter>
            </Card>
          ))}
        </section>

        {/* About Section */}
        <section className="mt-16 py-12 bg-white/50 rounded-2xl">
          <div className="max-w-4xl mx-auto text-center">
            <h3 className="text-2xl font-bold text-warm-terracotta mb-6 font-heading drop-shadow-md">–û –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ</h3>
            <div className="grid md:grid-cols-3 gap-8 text-sm">
              <div>
                <div className="text-2xl mb-2">ü•©</div>
                <h4 className="font-semibold mb-2 font-heading">–¢–æ–ª—å–∫–æ —Ö–∞–ª—è–ª—å –ø—Ä–æ–¥—É–∫—Ü–∏—è</h4>
                <p className="text-muted-foreground font-body">–í—Å–µ –Ω–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –∏–º–µ—é—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –∫–∞—á–µ—Å—Ç–≤–∞</p>
              </div>
              <div>
                <div className="text-2xl mb-2">üë®‚Äçüç≥</div>
                <h4 className="font-semibold mb-2 font-heading">–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫—É—Ö–Ω—è</h4>
                <p className="text-muted-foreground font-body">–ì–æ—Ç–æ–≤–∏–º —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –≤–æ—Å—Ç–æ—á–Ω—ã–µ –±–ª—é–¥–∞ –ø–æ —Å–µ–º–µ–π–Ω—ã–º —Ä–µ—Ü–µ–ø—Ç–∞–º</p>
              </div>
              <div>
                <div className="text-2xl mb-2">üöö</div>
                <h4 className="font-semibold mb-2 font-heading">–î–æ—Å—Ç–∞–≤–∫–∞ –∏ —Å–∞–º–æ–≤—ã–≤–æ–∑</h4>
                <p className="text-muted-foreground font-body">–£–¥–æ–±–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É –∏–ª–∏ —Å–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –Ω–∞—à–µ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞</p>
              </div>
            </div>
            
            <div className="mt-8 p-6 bg-gradient-to-br from-islamic-gold/20 to-golden-amber/30 rounded-lg border border-desert-sand/50">
              <h4 className="font-semibold text-warm-terracotta mb-2 font-heading">üìç –ö–æ–Ω—Ç–∞–∫—Ç—ã</h4>
              <p className="text-sm text-muted-foreground mb-1 font-body">–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –í–æ—Å—Ç–æ—á–Ω–∞—è, –¥. 15</p>
              <p className="text-sm text-muted-foreground mb-1 font-body">üìû +7 (495) 123-45-67</p>
              <p className="text-sm text-muted-foreground font-body">‚è∞ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 9:00 –¥–æ 21:00</p>
            </div>
          </div>
        </section>
      </main>
    </div>
  );
};

export default Index;